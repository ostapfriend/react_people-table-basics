{"version":3,"sources":["api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getPeople","fetch","then","response","json","PersonRow","person","name","sex","born","died","motherName","fatherName","className","slug","PeopleTable","useState","people","setPeople","useEffect","data","map","HomePage","NotFoundPage","App","activeLink","isActive","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"8PAQO,IAAMA,EAAY,kBAJhBC,MAHQ,qEAIZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,OCDlBC,EAA4B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAExCC,EAMED,EANFC,KACAC,EAKEF,EALFE,IACAC,EAIEH,EAJFG,KACAC,EAGEJ,EAHFI,KACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,WAGF,OACE,qBAAIC,UAAU,SAAd,UACE,6BAAKN,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MANqBN,EAAOQ,OCX1BC,EAAwB,WACnC,MAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,qBAAU,WACRnB,IAAYE,MAAK,SAAAkB,GAAI,OAAIF,EAAUE,QAClC,IAGD,wBACEP,UAAU,oBADZ,UAGE,gCACE,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,iBACA,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,oBACA,oBAAIA,UAAU,aAAd,yBAGJ,gCACGI,EAAOI,KAAI,SAACf,GAAD,OACV,cAAC,EAAD,CAAWA,OAAQA,aC3BhBgB,EAAW,WACtB,OACE,oBAAIT,UAAU,4BAAd,wBCCSU,G,MAAyB,kBACpC,sBAAKV,UAAU,SAAf,UACE,oBAAIA,UAAU,4BAAd,4BAEA,qBAAKA,UAAU,yBCMNW,EAAe,WAC1B,IAAMC,EAAa,SAAC,GAAD,SAAGC,SAClB,8BACA,6BAEJ,OACE,sBAAKb,UAAU,MAAf,UACE,wBAAQA,UAAU,eAAlB,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CACEA,UAAWY,EACXE,GAAG,IAFL,sBAMA,cAAC,IAAD,CACEd,UAAWY,EACXE,GAAG,UAFL,6BASJ,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,SACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUF,GAAG,QAExB,cAAC,IAAD,CACEC,KAAK,IACLC,QAAS,cAAC,EAAD,aC/CnBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.948d1f35.chunk.js","sourcesContent":["// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction getData<T>(): Promise<T> {\n  return fetch(BASE_URL)\n    .then(response => response.json());\n}\n\nexport const getPeople = () => getData<Person[]>();\n","type Props = {\n  person: Person,\n};\n\nexport const PersonRow:React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr className=\"person\" key={person.slug}>\n      <td>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName}</td>\n      <td>{fatherName}</td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(data => setPeople(data));\n  }, []);\n\n  return (\n    <table\n      className=\"table PeopleTable\"\n    >\n      <thead>\n        <tr className=\"columnTable\">\n          <th className=\"title is-3\">Name</th>\n          <th className=\"title is-3\">Sex</th>\n          <th className=\"title is-3\">Born</th>\n          <th className=\"title is-3\">Died</th>\n          <th className=\"title is-3\">Mother</th>\n          <th className=\"title is-3\">Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PersonRow person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title is-3 has-text-white\">Home Page</h1>\n  );\n};\n","import React from 'react';\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => (\n  <div className=\"Loader\">\n    <h1 className=\"title is-3 has-text-white\">Page not found</h1>\n\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import './App.scss';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport 'bulma/css/bulma.css';\n\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App:React.FC = () => {\n  const activeLink = ({ isActive }: { isActive: boolean }) => (isActive\n    ? 'title is-1 has-text-primary'\n    : 'title is-1 has-text-white');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header \">\n        <nav className=\"App__nav\">\n          <NavLink\n            className={activeLink}\n            to=\"/\"\n          >\n            HomePage\n          </NavLink>\n          <NavLink\n            className={activeLink}\n            to=\"/people\"\n          >\n            PeoplePage\n          </NavLink>\n        </nav>\n      </header>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route\n          path=\"people\"\n          element={<PeopleTable />}\n        />\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" />}\n        />\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}